apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mia-traefik-ingress.fullname" . | quote }}
  labels:
    {{- include "mia-traefik-ingress.labels" . | nindent 4 }}
  {{- with .Values.deploy.annotations }}
  annotations: &Annotations
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.deploy.replicas }}
  {{- end }}
  selector:
    matchLabels: &Labels
      {{- include "mia-traefik-ingress.selectorLabels" . | nindent 6 }}
  strategy:
    type: "RollingUpdate"
    rollingUpdate:
      maxSurge: "25%"
      maxUnavailable: 0
  template:
    metadata:
      labels: *Labels
      {{- with .Values.deploy.annotations }}
      annotations: *Annotations
      {{- end }}
    spec:
      serviceAccountName: {{ include "mia-traefik-ingress.serviceAccountName" . | quote }}
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 60
      {{- with .Values.deploy.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ include "mia-traefik-ingress.fullname" . | quote }}
          image: {{ include "mia-traefik-ingress.image" . | quote }}
          args:
            {{- include "mia-traefik-ingress.argsConfigs" . | nindent  12 }}
          {{- with .Values.deploy.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: "web"
              containerPort: 8080
              protocol: "TCP"
            {{- if .Values.service.enableTLS }}
            - name: "websecure"
              containerPort: 8443
              protocol: "TCP"
            {{- end }}
            - name: "traefik"
              containerPort: 9000
              protocol: "TCP"
            {{- range .Values.service.additionalEntrypoints }}
            - name: {{ .name | quote }}
              containerPort: {{ .port }}
              protocol: {{ .protocol | quote }}
            {{- end }}
          volumeMounts:
            - name: "tmp"
              mountPath: "/tmp"
          livenessProbe:
            httpGet:
              path: "/ping"
              port: "traefik"
              scheme: "HTTP"
            failureThreshold: 3
            initialDelaySeconds: 11
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              path: "/ping"
              port: "traefik"
              scheme: "HTTP"
            failureThreshold: 1
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            privileged: false
            capabilities:
              drop:
                - "all"
      volumes:
        - name: "tmp"
          emptyDir: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 10000
        runAsGroup: 11000
        fsGroup: 12000
      affinity:
        {{- include "mia-traefik-ingress.podAffinity" . | nindent 8 }}
      {{- with .Values.deploy.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deploy.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
